
##定义拥有和运行Nginx服务的Linux系统用户
#user root;

##定义单进程。通常将其设成CPU的个数或者内核数
worker_processes  1;

##定义Nginx在哪里打日志
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

##Nginx写入主进程ID（PID）
#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {

	#在/opt/nginx/conf/mime.types写的配置将在http模块中解析
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    #采用IP HASH算法, 
    #当同IP进行重复访问时会被指定到上次访问到的服务器，可以解决动态网站SESSION共享问题
    
    #要转发的域名+端口 
    upstream myserver1 {
    	ip_hash;
        server 192.168.31.132:8301;
    }
    upstream myserver2 {
        ip_hash;
        server 192.168.31.132:8302;
    }
    upstream myserver3 {
        ip_hash;
        server 192.168.31.132:8303;
    }
    
    server {
        listen      80;
        server_name 8305.max.com;
        charset utf-8;

        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass http://myserver1;
            index index.html index.htm;
            #下面这两条配置，意思是将http头转发给后端应用，
            #不然你后端应用服务拿客户端IP地址的时候拿到的是nginx代理的地址而不是客户端的。
            proxy_set_header Host $host:$server_port;
            #proxy_set_header Host $proxy_header:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
    server {
        listen      80;
        server_name 8302.max.com;
        charset utf-8;
        #access_log logs/host.access.log main;
        location / {
            proxy_pass http://myserver2;
            index index.html index.htm;
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
        } 
    }
    server {
	  #listen	*:80;
        listen	*:443;
        server_name 8303.max.com;
        charset utf-8;
        #access_log logs/host.access.log main;
        #ssl秘钥文件
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        ssl_session_timeout 5m;
        location / {
            proxy_pass http://myserver3;
            index index.html index.htm;
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
        } 
    }



    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*;
}
